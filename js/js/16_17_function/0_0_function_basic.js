//함수복습

function sum(x,y) { //이 들어가는 특정한 값들을 받아줄 수 있는 변수를 매개변수(Parameter)
  console.log (x + y);
}

sum(1,4); //함수 호출될 때 들어가는 특정한 값: 인수(Argument)

//======================================================================
//함수를 효율적으로 작성 할 수 있도록 변수에 담아서 사용하기
// 반복적일땐 "변수"에담아서 사용/ 단발적일땐 직접적으로 사용

function sum(x,y) { 
  return x+y; 
  // 함수의 내용이 밖으로 나가서 동작한다는 의미도 있지만 이 내용이 종료된다는 뜻이기도함(그럼 returen밑의 내용은 동작하지 않는다)
}

sum(1,4);

//======================================================================
//매개변수가 너무 많은경우, 하지만 되도록이면 매개변수 선언해주기
function sum() {
  console.log(arguments); 
  return arguments[0] + arguments[1];
}

console.log(9,10) // => result 19가 나옴

//======================================================================
//함수를 효율적으로 작성 할 수 있도록 변수에 담아서 사용하기
// 반복적일땐 "변수"에담아서 사용/ 단발적일땐 직접적으로 사용


function sum(x,y) { 
  return x+y; 
}

const a = sum(1,4);
const b = sum(1,4);

console.log(a, b);

//======================================================================

function sum(x,y) { 
  return x+y; 
  // 함수의 내용이 밖으로 나가서 동작한다는 의미도 있지만 이 내용이 종료된다는 뜻이기도함(그럼 returen밑의 내용은 동작하지 않는다)
  console.log(x+y); //동작하지않음
}

sum(1,4);
